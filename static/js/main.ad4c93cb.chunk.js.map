{"version":3,"sources":["img/error.gif","img/new-logo.svg","components/App/styles.ts","actions/universalAction.ts","api/index.ts","functions/api-calls.ts","components/pages/Home/api.ts","components/pages/Home/service.ts","components/pages/Home/styles.ts","components/Shared/styles.ts","components/Shared/Loaders.tsx","components/Shared/NoData.tsx","components/Shared/Errors.tsx","components/pages/Home/Streams/index.tsx","components/pages/Home/Games/index.tsx","components/pages/Home/index.tsx","components/pages/Home/Streams/Channel/index.tsx","functions/replace-empy-tags.ts","components/pages/Home/Games/Game/index.tsx","Router.js","components/Footer/styles.ts","components/Footer/index.tsx","components/Shared/ScrollToTop.tsx","components/App/App.jsx","reducers/redusers.ts","reducers/index.ts","index.jsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","universalAction","type","payload","option","gg","get","url","a","options","axios","result","data","trace","console","error","message","baseUrlV2","streamList","gameList","getAllStreamsFetchApi","page","getApi","res","getAllGamesFetchApi","getChannelDataFetchApi","channelKey","getGameDataFetchApi","game","getAllStreamsFetch","Object","values","_embedded","page_count","getAllGamesFetch","getChannelDataFetch","getGameDataFetch","fullHeight","minHeight","noFullHeight","top","bottom","tabs","margin","tab","color","link","textDecoration","grey","streamMainBlue","blue","linkDecoration","streamPrev","maxWidth","height","opacity","userOnlineMainBox","position","userOnlineBox","zIndex","right","showMoreButton","gamePrev","streamPlayerContainer","streamDesriptionContainer","channelHeaderImgContainer","gamePosterImgContainer","mainLoader","textAlign","simpleLoader","simpleNoData","MainCenteredLoader","classes","Grid","container","alignContent","className","item","xs","CircularProgress","SimpleCenteredLoader","SimpleNoDataCentered","Typography","align","MainCenteredError","variant","src","errorImg","alt","Streams","React","memo","props","useState","isLoaded","getRes","setStreamList","newLoaded","setNewLoaded","setPage","useEffect","isSubscribed","then","prev","Helmet","length","flat","map","stream","i","player_viewers","key","channel","thumb","games","Grow","in","timeout","lg","sm","to","Box","fontSize","noWrap","paragraph","Button","onClick","Games","setGameList","id","poster","style","background","backgroundSize","backgroundPosition","backgroundRepeat","Home","location","useLocation","dispatch","useDispatch","pathname","value","setValue","Container","Tabs","indicatorColor","onChange","event","newValue","Tab","label","component","Link","Channel","routerParams","useParams","streamData","embed","description","img","log","target","ReactHtmlParser","replace","Game","gameData","justify","md","Router","exact","path","render","footer","footerGrid","divider","linkIcon","Footer","Divider","href","rel","withRouter","history","children","unlisten","listen","window","scrollTo","App","useTheme","streamer","useSelector","state","streamerReducer","openChat","closeChatReducer","basename","CssBaseline","AppBar","clsx","Toolbar","logoImg","IconButton","aria-label","edge","Drawer","anchor","open","paper","direction","frameBorder","InitialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ad4c93cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.e3ebc48c.gif\";","module.exports = __webpack_public_path__ + \"static/media/new-logo.acc10b3e.svg\";","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 320;\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: drawerWidth,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: 0,\r\n    },\r\n  })\r\n);\r\n","export const universalAction = (type: any, payload?: any, option?: any) => {\r\n  return {\r\n    type,\r\n    payload\r\n  };\r\n};\r\n","export const gg = {\r\n  baseUrlV2: \"https://api2.goodgame.ru/v2/\",\r\n  gameList: \"games\", // game url\r\n  streamList: \"streams\", // id\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const get = async (url: string, options: object = {}) => {\r\n  try {\r\n    const result = await axios(url, options);\r\n    const { data } = result;\r\n\r\n    if (!data.trace) {\r\n      return data.result || data;\r\n    } else {\r\n      return data.trace;\r\n    }\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n","import { gg } from \"../../../api\";\r\nimport { get as getApi } from \"../../../functions/api-calls\";\r\n\r\nconst { baseUrlV2, streamList, gameList } = gg;\r\n\r\nexport const getAllStreamsFetchApi = async (page: number) => {\r\n  const res = await getApi(`${baseUrlV2}${streamList}?page=${page}`);\r\n  return res;\r\n};\r\n\r\nexport const getAllGamesFetchApi = async (page: number) => {\r\n  const res = await getApi(`${baseUrlV2}${gameList}?page=${page}`);\r\n  return res;\r\n};\r\n\r\nexport const getChannelDataFetchApi = async (channelKey: string) => {\r\n  const res = await getApi(`${baseUrlV2}${streamList}/${channelKey}`);\r\n  return res;\r\n};\r\n\r\nexport const getGameDataFetchApi = async (game: string) => {\r\n  const res = await getApi(`${baseUrlV2}${gameList}/${game}`);\r\n  return res;\r\n};\r\n","import {\r\n  getAllStreamsFetchApi,\r\n  getAllGamesFetchApi,\r\n  getChannelDataFetchApi,\r\n  getGameDataFetchApi,\r\n} from \"./api\";\r\n\r\nexport const getAllStreamsFetch = async (page: number) => {\r\n  const result: any = await getAllStreamsFetchApi(page);\r\n\r\n  return {\r\n    result: result ? Object.values(result._embedded)[0] : [],\r\n    page_count: result && result.page_count,\r\n    error: !result && true,\r\n  };\r\n};\r\n\r\nexport const getAllGamesFetch = async (page: number) => {\r\n  const result: any = await getAllGamesFetchApi(page);\r\n\r\n  return {\r\n    result: result ? Object.values(result._embedded)[0] : [],\r\n    page_count: result && result.page_count,\r\n    error: !result && true,\r\n  };\r\n};\r\n\r\nexport const getChannelDataFetch = async (channelKey: string) => {\r\n  const result: any = await getChannelDataFetchApi(channelKey);\r\n\r\n  return {\r\n    result: result ? result : {},\r\n    error: !result && true,\r\n  };\r\n};\r\n\r\nexport const getGameDataFetch = async (game: string) => {\r\n  const result: any = await getGameDataFetchApi(game);\r\n\r\n  return {\r\n    result: result ? result : {},\r\n    error: !result && true,\r\n  };\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { grey, blue } from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fullHeight: {\r\n      minHeight: \"100vh\",\r\n    },\r\n\r\n    noFullHeight: {\r\n      minHeight: \"80vh\",\r\n      top: \"10vh\",\r\n      bottom: \"10vh\",\r\n    },\r\n\r\n    tabs: {\r\n      margin: theme.spacing(4),\r\n    },\r\n\r\n    tab: {\r\n      color: \"#d5d5d5!important\",\r\n    },\r\n\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: grey[\"A100\"],\r\n    },\r\n\r\n    streamMainBlue: {\r\n      color: blue[\"A200\"],\r\n    },\r\n\r\n    linkDecoration: {\r\n      color: blue[\"A100\"],\r\n    },\r\n    streamPrev: {\r\n      maxWidth: \"100%\",\r\n      height: \"auto\",\r\n      \"&:hover\": {\r\n        opacity: 0.8,\r\n      },\r\n    },\r\n    userOnlineMainBox: {\r\n      position: \"relative\",\r\n    },\r\n    userOnlineBox: {\r\n      position: \"absolute\",\r\n      zIndex: 100,\r\n      top: 10,\r\n      right: 10,\r\n      color: grey[\"A100\"],\r\n      padding: theme.spacing(1),\r\n    },\r\n\r\n    showMoreButton: {\r\n      margin: theme.spacing(2, 0),\r\n      width: \"100%\",\r\n    },\r\n\r\n    gamePrev: {\r\n      maxWidth: \"100%\",\r\n      height: 250,\r\n      \"&:hover\": {\r\n        opacity: 0.8,\r\n      },\r\n    },\r\n\r\n    streamPlayerContainer: {\r\n      minHeight: \"70vh\",\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    streamDesriptionContainer: {\r\n      padding: theme.spacing(2),\r\n      color: grey[\"A100\"],\r\n\r\n      \"& a\": {\r\n        display: \"inline-block!important\",\r\n        color: blue[\"A100\"],\r\n      },\r\n    },\r\n\r\n    channelHeaderImgContainer: {\r\n      maxWidth: 75,\r\n      height: 75,\r\n      margin: \"10px auto\",\r\n    },\r\n\r\n    gamePosterImgContainer: {\r\n      width: \"100%\",\r\n      minHeight: 500,\r\n      margin: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainLoader: {\r\n      height: \"75vh\",\r\n      textAlign:\"center\"\r\n    },\r\n\r\n    simpleLoader: {\r\n      margin: theme.spacing(2),\r\n      textAlign:\"center\"\r\n    },\r\n\r\n    simpleNoData: {\r\n      margin: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const MainCenteredLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container alignContent=\"center\" className={classes.mainLoader}>\r\n      <Grid item xs={12}>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const SimpleCenteredLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container alignContent=\"center\" className={classes.simpleLoader}>\r\n      <Grid item xs={12}>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const SimpleNoDataCentered = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container alignContent=\"center\" className={classes.simpleNoData}>\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\">\r\n          NODATA\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nimport errorImg from \"../../img/error.gif\";\r\n\r\nexport const MainCenteredError = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container alignContent=\"center\" className={classes.mainLoader}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" color=\"secondary\">\r\n          Произошла ошибка\r\n        </Typography>\r\n        <img src={errorImg} alt=\"\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getAllStreamsFetch } from \"../service\";\r\nimport { Grid, Box, Typography, Button, Grow } from \"@material-ui/core\";\r\nimport { useStyles } from \"../styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n  MainCenteredLoader,\r\n  SimpleCenteredLoader,\r\n} from \"../../../Shared/Loaders\";\r\nimport { SimpleNoDataCentered } from \"../../../Shared/NoData\";\r\n\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport { MainCenteredError } from \"../../../Shared/Errors\";\r\n\r\nexport const Streams = React.memo((props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [res, getRes] = useState<any>({\r\n    isLoaded: false,\r\n    error: false,\r\n    page_count: 0,\r\n  });\r\n\r\n  const [streamList, setStreamList] = useState<any>([]);\r\n  const [newLoaded, setNewLoaded] = useState<any>([]);\r\n\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const { isLoaded, error, page_count } = res;\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    setNewLoaded(false);\r\n    getAllStreamsFetch(page).then((res: any) => {\r\n      const { result, error, page_count } = res;\r\n      if (isSubscribed) {\r\n        getRes({\r\n          isLoaded: true,\r\n          newLoaded: true,\r\n          page_count,\r\n          error,\r\n        });\r\n\r\n        setStreamList((prev: any) => [...prev, result]);\r\n        setNewLoaded(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isSubscribed = false;\r\n    };\r\n  }, [page]);\r\n\r\n  const addPage = () => {\r\n    setPage((page) => page + 1);\r\n  };\r\n\r\n  if (!isLoaded) {\r\n    return <MainCenteredLoader />;\r\n  } else {\r\n    if (error) {\r\n      return <MainCenteredError />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Grid container spacing={2}>\r\n            <Helmet>\r\n              <title>GoodGame | Стримы</title>\r\n            </Helmet>\r\n\r\n            {streamList.length > 0 ? (\r\n              streamList.flat().map((stream: any, i: number) => {\r\n                const {\r\n                  player_viewers,\r\n                  key,\r\n                  channel: { thumb, title, games },\r\n                } = stream;\r\n\r\n                const game = games[0].title;\r\n                return (\r\n                  <Grow key={i} in={isLoaded} timeout={1200}>\r\n                    <Grid item lg={4} sm={6} xs={12}>\r\n                      <Link to={`/channel/${key}`} className={classes.link}>\r\n                        <Box className={classes.userOnlineMainBox}>\r\n                          <Box className={classes.userOnlineBox}>\r\n                            <Grid container spacing={2}>\r\n                              <Grid item xs={6}>\r\n                                <PeopleAltIcon fontSize=\"small\" />\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                {player_viewers}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Box>\r\n\r\n                          <img\r\n                            src={thumb}\r\n                            alt=\"\"\r\n                            className={classes.streamPrev}\r\n                          />\r\n                          <Typography\r\n                            noWrap={true}\r\n                            className={classes.streamMainBlue}\r\n                          >\r\n                            {key}\r\n                          </Typography>\r\n                          <Typography noWrap={true}>{title}</Typography>\r\n                          <Typography variant=\"caption\" paragraph noWrap={true}>\r\n                            {game}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grow>\r\n                );\r\n              })\r\n            ) : (\r\n              <SimpleNoDataCentered />\r\n            )}\r\n          </Grid>\r\n\r\n          {!newLoaded && streamList.length > 0 && <SimpleCenteredLoader />}\r\n\r\n          {page_count !== page && newLoaded && (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className={classes.showMoreButton}\r\n              onClick={addPage}\r\n            >\r\n              Показать еще\r\n            </Button>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useStyles } from \"../styles\";\r\nimport { getAllGamesFetch } from \"../service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Button, Typography, Grow } from \"@material-ui/core\";\r\n\r\nimport {\r\n  MainCenteredLoader,\r\n  SimpleCenteredLoader,\r\n} from \"../../../Shared/Loaders\";\r\nimport { SimpleNoDataCentered } from \"../../../Shared/NoData\";\r\nimport { MainCenteredError } from \"../../../Shared/Errors\";\r\n\r\nexport const Games = React.memo((props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [res, getRes] = useState<any>({\r\n    isLoaded: false,\r\n    error: false,\r\n    page_count: 0,\r\n  });\r\n\r\n  const [gameList, setGameList] = useState<any>([]);\r\n  const [newLoaded, setNewLoaded] = useState<any>([]);\r\n\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const { isLoaded, error, page_count } = res;\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    setNewLoaded(false);\r\n    getAllGamesFetch(page).then((res: any) => {\r\n      const { result, error, page_count } = res;\r\n      if (isSubscribed) {\r\n        getRes({\r\n          isLoaded: true,\r\n          newLoaded: true,\r\n          page_count,\r\n          error,\r\n        });\r\n\r\n        setGameList((prev: any) => [...prev, result]);\r\n        setNewLoaded(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isSubscribed = false;\r\n    };\r\n  }, [page]);\r\n\r\n  const addPage = () => {\r\n    setPage((page) => page + 1);\r\n  };\r\n\r\n  if (!isLoaded) {\r\n    return <MainCenteredLoader />;\r\n  } else {\r\n    if (error) {\r\n      return <MainCenteredError />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Grid container spacing={2}>\r\n            <Helmet>\r\n              <title>GoodGame | Игры</title>\r\n            </Helmet>\r\n\r\n            {gameList.length > 0 ? (\r\n              gameList.flat().map((game: any) => {\r\n                const { id, poster, title, url } = game;\r\n\r\n                return (\r\n                  <Grow key={id} in={isLoaded} timeout={1200}>\r\n                    <Grid item lg={2} sm={4} xs={6}>\r\n                      <Link to={`/games/${url}`} className={classes.link}>\r\n                        <div\r\n                          className={classes.gamePrev}\r\n                          style={{\r\n                            background: `url(${poster})`,\r\n                            backgroundSize: \"100%\",\r\n                            backgroundPosition: \"center\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                          }}\r\n                        ></div>\r\n                        <Typography align=\"center\" noWrap={true}>\r\n                          {title}\r\n                        </Typography>\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grow>\r\n                );\r\n              })\r\n            ) : (\r\n              <SimpleNoDataCentered />\r\n            )}\r\n          </Grid>\r\n\r\n          {!newLoaded && gameList.length > 0 && <SimpleCenteredLoader />}\r\n\r\n          {page_count !== page && newLoaded && (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className={classes.showMoreButton}\r\n              onClick={addPage}\r\n            >\r\n              Показать еще\r\n            </Button>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Streams } from \"./Streams\";\r\nimport { Container, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Games } from \"./Games\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { universalAction } from \"../../../actions/universalAction\";\r\n\r\nexport const Home = () => {\r\n  const location = useLocation();\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [value, setValue] = useState(location.pathname === \"/\" ? 0 : 1);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(universalAction(\"OPEN\", false));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Стримы\" component={Link} to=\"/\" className={classes.tab} />\r\n        <Tab\r\n          label=\"Игры\"\r\n          component={Link}\r\n          to=\"/games\"\r\n          className={classes.tab}\r\n        />\r\n      </Tabs>\r\n\r\n      {value === 0 && <Streams />}\r\n      {value === 1 && <Games />}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getChannelDataFetch } from \"../../service\";\r\nimport { MainCenteredLoader } from \"../../../../Shared/Loaders\";\r\nimport { MainCenteredError } from \"../../../../Shared/Errors\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../styles\";\r\n\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { replaceEmptyTags } from \"../../../../../functions/replace-empy-tags\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { universalAction } from \"../../../../../actions/universalAction\";\r\n\r\nexport const Channel = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const routerParams = useParams<any>();\r\n\r\n  const [res, getRes] = useState<any>({\r\n    isLoaded: false,\r\n    error: false,\r\n    streamData: {\r\n      channel: {\r\n        embed: \"\",\r\n        description: \"\",\r\n        title: \"\",\r\n        games: [],\r\n        img: \"\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const {\r\n    isLoaded,\r\n    error,\r\n    streamData: {\r\n      channel: { embed, description, title, games, img },\r\n    },\r\n  } = res;\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    dispatch(universalAction(\"ADD_STREAMER\", routerParams.channelKey));\r\n\r\n    getChannelDataFetch(routerParams.channelKey).then((res: any) => {\r\n      const { error, result } = res;\r\n      if (isSubscribed) {\r\n        getRes({\r\n          isLoaded: true,\r\n          error,\r\n          streamData: result,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      dispatch(universalAction(\"REMOVE_STREAMER\", routerParams.channelKey));\r\n      isSubscribed = false;\r\n    };\r\n  }, [routerParams.channelKey, dispatch]);\r\n\r\n  console.log(description);\r\n\r\n  if (!isLoaded) {\r\n    return <MainCenteredLoader />;\r\n  } else {\r\n    if (error) {\r\n      return <MainCenteredError />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Grid container>\r\n            <Helmet>\r\n              <title>GoodGame | Стрим {routerParams.channelKey}</title>\r\n            </Helmet>\r\n            <Grid container>\r\n              <Grid item xs={1}>\r\n                <div\r\n                  className={classes.channelHeaderImgContainer}\r\n                  style={{\r\n                    background: `url(${img})`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                  }}\r\n                ></div>\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  className={classes.streamDesriptionContainer}\r\n                >\r\n                  <Typography variant=\"h5\">{title}</Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    <Link\r\n                      to={`/channel/${routerParams.channelKey}`}\r\n                      target=\"_blank\"\r\n                      className={classes.linkDecoration}\r\n                    >\r\n                      {routerParams.channelKey}\r\n                    </Link>{\" \"}\r\n                    играет в{\" \"}\r\n                    <Link\r\n                      to={`/games/${games[0].url}`}\r\n                      target=\"_blank\"\r\n                      className={classes.linkDecoration}\r\n                    >\r\n                      {games[0].title}\r\n                    </Link>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.streamPlayerContainer}>\r\n              {ReactHtmlParser(embed)}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.streamDesriptionContainer}>\r\n              {ReactHtmlParser(replaceEmptyTags(description))}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n};\r\n","export const replaceEmptyTags = (str: string) => {\r\n  const res = str.replace(/<[^>]*?>\\s*<\\/[^>]*?>/gim, \"\");\r\n  return res;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getGameDataFetch } from \"../../service\";\r\nimport { MainCenteredLoader } from \"../../../../Shared/Loaders\";\r\nimport { MainCenteredError } from \"../../../../Shared/Errors\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Grid, Typography, Grow } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../styles\";\r\n\r\nexport const Game = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const routerParams = useParams<any>();\r\n\r\n  const [res, getRes] = useState<any>({\r\n    isLoaded: false,\r\n    error: false,\r\n    gameData: {\r\n      poster: \"\",\r\n      title: \"\",\r\n    },\r\n  });\r\n\r\n  const {\r\n    isLoaded,\r\n    error,\r\n    gameData: { poster, title },\r\n  } = res;\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    getGameDataFetch(routerParams.game).then((res: any) => {\r\n      const { error, result } = res;\r\n      if (isSubscribed) {\r\n        getRes({\r\n          isLoaded: true,\r\n          error,\r\n          gameData: result,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isSubscribed = false;\r\n    };\r\n  }, [routerParams.game]);\r\n\r\n  if (!isLoaded) {\r\n    return <MainCenteredLoader />;\r\n  } else {\r\n    if (error) {\r\n      return <MainCenteredError />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Grid container>\r\n            <Helmet>\r\n              <title>GoodGame | Игра {title}</title>\r\n            </Helmet>\r\n            <Grow in={isLoaded} timeout={1200}>\r\n              <Grid\r\n                container\r\n                alignContent=\"center\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.noFullHeight}\r\n              >\r\n                <Grid item md={4} xs={1}></Grid>\r\n                <Grid item md={4} xs={10}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    className={classes.streamDesriptionContainer}\r\n                    align=\"center\"\r\n                  >\r\n                    {title}\r\n                  </Typography>\r\n                  <div\r\n                    className={classes.gamePosterImgContainer}\r\n                    style={{\r\n                      background: `url(${poster})`,\r\n                      backgroundSize: \"contain\",\r\n                      backgroundRepeat: \"no-repeat\",\r\n                    }}\r\n                  ></div>\r\n                </Grid>\r\n                <Grid item md={4} xs={1}></Grid>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Home } from \"./components/pages/Home\";\r\nimport { Channel } from \"./components/pages/Home/Streams/Channel\";\r\nimport { Game } from \"./components/pages/Home/Games/Game\";\r\n\r\nexport const Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/games\" component={Home} />\r\n      <Route exact path=\"/channel/:channelKey\" component={Channel} />\r\n      <Route exact path=\"/games/:game\" component={Game} />\r\n      <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n    </Switch>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { grey, blue } from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    footer: {\r\n      minHeight: 200,\r\n      margin: \"20px auto 0 auto\",\r\n      color: grey[\"A100\"],\r\n    },\r\n    footerGrid: {\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    divider: {\r\n      background: grey[800],\r\n      minHeight: 2,\r\n      margin: theme.spacing(2),\r\n    },\r\n\r\n    linkDecoration: {\r\n      color: blue[\"A100\"],\r\n    },\r\n\r\n    linkIcon: {\r\n      color: blue[\"A100\"],\r\n      padding: theme.spacing(.5),\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { Container, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth={false} className={classes.footer}>\r\n      <Divider className={classes.divider} />\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        justify=\"space-around\"\r\n        className={classes.footerGrid}\r\n      >\r\n        <Grid item lg={4} xs={12}>\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            Это не основная версия приложения. Сайт создан благодаря доступному\r\n            API и не претендует ни на какие права и не позиционирует себя как\r\n            основной источник потребления контента{\" \"}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item lg={8}></Grid>\r\n        <Grid item lg={4} xs={12}>\r\n          <Typography variant=\"body2\">\r\n            Источник и правообладатель{\" \"}\r\n            <a\r\n              href=\"https://goodgame.ru/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className={classes.linkDecoration}\r\n            >\r\n              goodgame.ru\r\n            </a>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item lg={8}></Grid>\r\n        <Grid item lg={8} xs={12}>\r\n          <Typography variant=\"body2\">\r\n            {\" \"}\r\n            Приложение создано с использованием{\" \"}\r\n            <a\r\n              href=\"http://api2.goodgame.ru/apigility/documentation/Goodgame-v2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className={classes.linkDecoration}\r\n            >\r\n              Goodgame-v2 API\r\n            </a>{\" \"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item lg={4} xs={12}>\r\n          <a\r\n            href=\"https://github.com/Phillbot/goodgame\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className={classes.linkIcon}\r\n          >\r\n            <GitHubIcon />\r\n          </a>\r\n\r\n          <a\r\n            href=\"https://t.me/Phillb0t\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className={classes.linkIcon}\r\n          >\r\n            <TelegramIcon />\r\n          </a>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = (props: any) => {\r\n  const { history, children } = props;\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history]);\r\n\r\n  return <Fragment>{children}</Fragment>;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Divider,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { universalAction } from \"../../actions/universalAction\";\r\n\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport { Router } from \"../../Router\";\r\nimport { MuiThemeProvider, useTheme } from \"@material-ui/core/styles\"; // v1.x\r\nimport { Footer } from \"../Footer\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n\r\nimport logoImg from \"../../img/new-logo.svg\";\r\n\r\nimport ScrollToTop from \"../Shared/ScrollToTop\";\r\n\r\nimport \"typeface-roboto\";\r\nimport \"./main.scss\";\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const streamer = useSelector((state) => state.streamerReducer.streamer);\r\n  const openChat = useSelector((state) => state.closeChatReducer.openChat);\r\n\r\n  const handleDrawerOpen = () => {\r\n    dispatch(universalAction(\"OPEN\", true));\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    dispatch(universalAction(\"OPEN\", false));\r\n  };\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter basename=\"goodgame\">\r\n        <ScrollToTop>\r\n          <CssBaseline />\r\n          <div className=\"app\">\r\n            <div className={classes.root}>\r\n              <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                  [classes.appBarShift]: openChat,\r\n                })}\r\n              >\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                    <Link to=\"/\">\r\n                      {\" \"}\r\n                      <img src={logoImg} alt=\"\" />\r\n                    </Link>\r\n                  </Typography>\r\n\r\n                  {streamer && (\r\n                    <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      edge=\"end\"\r\n                      onClick={handleDrawerOpen}\r\n                      className={clsx(openChat && classes.hide)}\r\n                    >\r\n                      <ChatIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Toolbar>\r\n              </AppBar>\r\n              <main\r\n                className={clsx(classes.content, {\r\n                  [classes.contentShift]: openChat,\r\n                })}\r\n              >\r\n                <div className={classes.drawerHeader} />\r\n\r\n                <Router />\r\n                <Footer />\r\n              </main>\r\n              <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={openChat}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n              >\r\n                <div className={classes.drawerHeader}>\r\n                  <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === \"rtl\" ? (\r\n                      <ChevronLeftIcon />\r\n                    ) : (\r\n                      <ChevronRightIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <iframe\r\n                  src={`https://goodgame.ru/chat/${streamer}/`}\r\n                  frameBorder=\"0\"\r\n                  title=\"chat\"\r\n                  style={{ minHeight: \"92vh\" }}\r\n                ></iframe>\r\n              </Drawer>\r\n            </div>\r\n          </div>\r\n        </ScrollToTop>\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n","const InitialState = {\r\n  streamList: [],\r\n  streamer: \"\",\r\n  openChat: false,\r\n};\r\n\r\nexport const streamListReducer = (state = InitialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"ADD_STREAM_LIST\":\r\n      return {\r\n        ...state,\r\n        streamList: [...state.streamList, action.payload],\r\n      };\r\n    case \"REMOVE_STREAM_LIST\":\r\n      return { ...state, streamList: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const streamerReducer = (state = InitialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"ADD_STREAMER\":\r\n      return {\r\n        ...state,\r\n        streamer: action.payload,\r\n      };\r\n    case \"REMOVE_STREAMER\":\r\n      return { ...state, streamer: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const closeChatReducer = (state = InitialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"OPEN\":\r\n      return {\r\n        ...state,\r\n        openChat: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { streamerReducer, closeChatReducer } from \"./redusers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  streamerReducer,\r\n  closeChatReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}